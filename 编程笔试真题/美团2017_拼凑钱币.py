'''问题：美团2017_拼凑钱币
给你六种面额 1、5、10、20、50、100 元的纸币，假设每种币值的数量都足够多，
编写程序求组成N元（N为0~10000的非负整数）的不同组合的个数。
输入描述:
输入包括两行,第一行包含一个整数n(1 ≤ n ≤ 10000)
第二行包括n个整数,表示h数组中的每个值,h_i(1 ≤ h_i ≤ 1,000,000)

输入描述:
输入包括一个整数n(1 ≤ n ≤ 10000)

输出描述:
输出一个整数,表示不同的组合方案数

输入例子1:
1

输出例子1:
1
'''
'''解题思路：
动态规划:
dp[j]表示使用前i+1种钱币表示面值为j的方案数
= 使用前i种钱币表示面值为j的方案数
+ 使用前i+1种钱币表示面值为j-coins[i]的方案数
'''
coins = [1, 5,10, 20, 50, 100]
nums_coins = len(coins)
dp = [1]*(n+1)
 
def dpChange(dp, coins, n):
    for i in range(1, len(coins)):
        for j in range(coins[i], n+1):
            dp[j] = dp[j] + dp[j-coins[i]]
    return dp